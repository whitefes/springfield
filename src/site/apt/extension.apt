 -----
 Extension
 -----
 www.u2ware.com
 -----
 -----

Extension
~~~~~~~~~~~~~~~~~~~~
 
 @Springfield 의 strategy 속성 값에 따라 으로 Bean 이 자동 생성, 등록 된다.

*-----------------------------+----------------------------+------------------------+------------------------------+
| Springfield\ Strategy      | bean name                | bean type              | bean implement               |
*-----------------------------+----------------------------+------------------------+------------------------------+
| SQLSESSION_REPOSITPRY_ONLY | "~Repository"  |< EntityRepository<T,ID>>   | <<com.u2ware.springfield.repository.sqlsession. EntitySqlsessionRepository>>  |
*-----------------------------+----------------------------+------------------------+------------------------------+
| JPA_REPOSITPRY_ONLY | "~Repository"  |< EntityRepository<T,ID>>   | <<com.u2ware.springfield.repository.jpa. EntityJpaRepository >> |
*-----------------------------+----------------------------+------------------------+------------------------------+
| MONGODB_REPOSITPRY_ONLY | "~Repository"  |< EntityRepository<T,ID>>   | <<com.u2ware.springfield.repository.mongodb. EntityMongodbRepository >> |
*-----------------------------+----------------------------+------------------------+------------------------------+

	[Note:]
		 POJO Class 에   @Springfield 을 선언하면  Generic 류의 Controller / Service / Repository Bean 을 
		 생성하여 CoC 에 의해 "~Controller", "~Service", "~Repository" 라는 Bean Name 으로, springframework 의 applicationContext에 등록 한다.



