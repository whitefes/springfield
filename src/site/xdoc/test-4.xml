<?xml version="1.0"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
<properties>
	<title>Test</title>
	<author email="u2waremanager@gmail.com">www.u2ware.com</author>
</properties>

<body>
<section name="Test">

	<subsection name="JpaBeanRepositoryTest.java #1">
		<source><![CDATA[
package com.u2ware.springfield.sample.part1;

import lombok.Getter;
import lombok.Setter;

public class FindByIdAndPasswordOrderByNameDesc {

	@Getter @Setter public String id;
	@Getter @Setter public String password;
}
		]]></source>
		<source><![CDATA[
public class JpaBeanRepositoryTest extends ApplicationContextTestRoot{

	.
	.

	@Test
	public void testFindByEntityQueryObject1() throws Exception{
		
		FindByIdAndPasswordOrderByNameDesc query 
			= new FindByIdAndPasswordOrderByNameDesc();
		query.setPassword("pwd7");
		
		List<?> result = jpaBeanRepository.findAll(query);
		Assert.assertEquals(1, result.size());
	}
}
		]]></source>
		<dl>
			<dt>Note:</dt>
			<dd>
				<p>
					findAll() 에 전달되는 객체의  class name 이 "FindByIdAndPasswordOrderByNameDesc" 이므로, 이를 기본 <i>Query Method</i> 문자열로 한다.
				</p>
			</dd>
			<dd>
				<p>
					testFindByEntityQueryObject1() 에서  
					id 는  null 이고, password 거 null 이 아니므로 "password = ?" 가 where 조건으로 추가되고,
					name 의 내림차순(DESC)으로 "order by name desc" 가 질의에 추가된다.
				</p>
			</dd>
		</dl>
	</subsection>

	<subsection name="JpaBeanRepositoryTest.java #2">

		<source><![CDATA[
package com.u2ware.springfield.sample.part1;

import com.u2ware.springfield.repository.QueryMethod;

import lombok.Getter;
import lombok.Setter;

@QueryMethod("findByNameAndAgeOrderByIdAsc")
public class MyQuery {

	@Getter @Setter public String name;	
	@Getter @Setter public Integer age;
}
		]]></source>
		<source><![CDATA[
public class JpaBeanRepositoryTest extends ApplicationContextTestRoot{

	.
	.

	@Test
	public void testFindByEntityQueryObject2() throws Exception{
		
		MyQuery query = new MyQuery();
		query.setName("name5");
		
		List<?> result = jpaBeanRepository.findAll(query);
		Assert.assertEquals(1, result.size());
	}
}
		]]></source>
		<dl>
			<dt>Note:</dt>
			<dd>
				<p>
					findAll() 에 전달되는 객체의  @QueryMethod 선언값이 "findByNameAndAddressOrderByIdAsc" 이므로, 이를 기본 <i>Query Method</i> 문자열로 한다.
				</p>
			</dd>
			<dd>
				<p>
					testFindByEntityQueryObject2() 에서 
					name 은   null 이 아니고, address 는  null 이므로 "name = ?" 가 where 조건으로 추가되고,
					id 의 오림차순(ASC)으로 "order by id asc" 가 질의에 추가된다.
				</p>
			</dd>
		</dl>
	</subsection>
	<subsection name="QueryMethod">
		
		<source><![CDATA[
public interface EntityRepository<T, ID extends Serializable> {
	.	
	.	
	public long count(Object query);
	public List<T> findAll(Object query);
	public List<T> findAll(Object query, Sort sort);
	public Page<T> findAll(Object query, Pageable pageable);
}
		]]></source>
		<dl>
			<dt><i>Query Method</i>:</dt>
			<dd><p>EntityRepository 의  count() 및 findAll() 의 query 인자를  <i>Entity Query Object</i> 라고 명명 한다.</p></dd>
			<dd><i>Entity Query Object</i> 의 Class Name 또는  선언된 @com.u2ware.springfield.repository.QueryMethod 에 따라  <i>Query Method</i> 문자열이 결정되며, </dd>
			<dd><i>Query Method</i> 문자열을 기준으로 Entity Query Object 의 property 값의 null 여부에 따라   where 조건 및 order 조건이 동적으로 결정된다.</dd>
			<dd><p>&nbsp;</p></dd>
			<dt>Note:</dt>
			<dd><p>SQLSESSION 전략에서 <i>Query Method</i> 문자열은 sqlsession.xml 에 미리정의된 mapping query statement 를   의미한다.</p></dd>
			<dd><p>JPA  전략에서 <i>Query Method</i>문자열은   "findBy~" 로 시작하는   <a href="http://static.springsource.org/spring-data/data-jpa/docs/current/reference/html/#jpa.query-methods.query-creation">spring-data JPA Query Method</a>를 따른다.</p></dd>
			<dd><p>MONGODB 전략에서 <i>Query Method</i>문자열은   "findBy~" 로 시작하는   <a href="http://static.springsource.org/spring-data/data-mongodb/docs/current/reference/html/#mongodb.repositories.queries">spring-data mongodb Query Method</a> 를 따른다.</p></dd>
		</dl>
	</subsection>



</section>
</body>
</document>